/* tslint:disable */
/* eslint-disable */
/**
 * MyOrderApp Square API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LocationEntity } from './LocationEntity';
import {
    LocationEntityFromJSON,
    LocationEntityFromJSONTyped,
    LocationEntityToJSON,
} from './LocationEntity';
import type { SquareCard } from './SquareCard';
import {
    SquareCardFromJSON,
    SquareCardFromJSONTyped,
    SquareCardToJSON,
} from './SquareCard';
import type { UserEntity } from './UserEntity';
import {
    UserEntityFromJSON,
    UserEntityFromJSONTyped,
    UserEntityToJSON,
} from './UserEntity';

/**
 * 
 * @export
 * @interface CustomerEntity
 */
export interface CustomerEntity {
    /**
     * 
     * @type {string}
     * @memberof CustomerEntity
     */
    id?: string | null;
    /**
     * 
     * @type {Date}
     * @memberof CustomerEntity
     */
    createDate?: Date | null;
    /**
     * 
     * @type {UserEntity}
     * @memberof CustomerEntity
     */
    user?: UserEntity | null;
    /**
     * 
     * @type {string}
     * @memberof CustomerEntity
     */
    merchantId?: string | null;
    /**
     * 
     * @type {LocationEntity}
     * @memberof CustomerEntity
     */
    preferredLocation?: LocationEntity | null;
    /**
     * 
     * @type {SquareCard}
     * @memberof CustomerEntity
     */
    preferredSquareCard?: SquareCard | null;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerEntity
     */
    mailNotifications?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerEntity
     */
    messageNotifications?: boolean | null;
    /**
     * 
     * @type {boolean}
     * @memberof CustomerEntity
     */
    pushNotifications?: boolean | null;
}

/**
 * Check if a given object implements the CustomerEntity interface.
 */
export function instanceOfCustomerEntity(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function CustomerEntityFromJSON(json: any): CustomerEntity {
    return CustomerEntityFromJSONTyped(json, false);
}

export function CustomerEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): CustomerEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'createDate': !exists(json, 'createDate') ? undefined : (json['createDate'] === null ? null : new Date(json['createDate'])),
        'user': !exists(json, 'user') ? undefined : UserEntityFromJSON(json['user']),
        'merchantId': !exists(json, 'merchantId') ? undefined : json['merchantId'],
        'preferredLocation': !exists(json, 'preferredLocation') ? undefined : LocationEntityFromJSON(json['preferredLocation']),
        'preferredSquareCard': !exists(json, 'preferredSquareCard') ? undefined : SquareCardFromJSON(json['preferredSquareCard']),
        'mailNotifications': !exists(json, 'mailNotifications') ? undefined : json['mailNotifications'],
        'messageNotifications': !exists(json, 'messageNotifications') ? undefined : json['messageNotifications'],
        'pushNotifications': !exists(json, 'pushNotifications') ? undefined : json['pushNotifications'],
    };
}

export function CustomerEntityToJSON(value?: CustomerEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'createDate': value.createDate === undefined ? undefined : (value.createDate === null ? null : value.createDate.toISOString()),
        'user': UserEntityToJSON(value.user),
        'merchantId': value.merchantId,
        'preferredLocation': LocationEntityToJSON(value.preferredLocation),
        'preferredSquareCard': SquareCardToJSON(value.preferredSquareCard),
        'mailNotifications': value.mailNotifications,
        'messageNotifications': value.messageNotifications,
        'pushNotifications': value.pushNotifications,
    };
}

