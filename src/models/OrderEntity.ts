/* tslint:disable */
/* eslint-disable */
/**
 * MyOrderApp Square API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CustomerEntity } from './CustomerEntity';
import {
    CustomerEntityFromJSON,
    CustomerEntityFromJSONTyped,
    CustomerEntityToJSON,
} from './CustomerEntity';
import type { FulfillmentStatusEnum } from './FulfillmentStatusEnum';
import {
    FulfillmentStatusEnumFromJSON,
    FulfillmentStatusEnumFromJSONTyped,
    FulfillmentStatusEnumToJSON,
} from './FulfillmentStatusEnum';
import type { LineItemEntity } from './LineItemEntity';
import {
    LineItemEntityFromJSON,
    LineItemEntityFromJSONTyped,
    LineItemEntityToJSON,
} from './LineItemEntity';
import type { LocationEntity } from './LocationEntity';
import {
    LocationEntityFromJSON,
    LocationEntityFromJSONTyped,
    LocationEntityToJSON,
} from './LocationEntity';

/**
 * 
 * @export
 * @interface OrderEntity
 */
export interface OrderEntity {
    /**
     * 
     * @type {string}
     * @memberof OrderEntity
     */
    id?: string | null;
    /**
     * 
     * @type {CustomerEntity}
     * @memberof OrderEntity
     */
    customer?: CustomerEntity | null;
    /**
     * 
     * @type {LocationEntity}
     * @memberof OrderEntity
     */
    location?: LocationEntity | null;
    /**
     * 
     * @type {Array<LineItemEntity>}
     * @memberof OrderEntity
     */
    lineItems?: Array<LineItemEntity> | null;
    /**
     * 
     * @type {FulfillmentStatusEnum}
     * @memberof OrderEntity
     */
    squareFulfillmentStatus?: FulfillmentStatusEnum;
    /**
     * 
     * @type {Date}
     * @memberof OrderEntity
     */
    closedDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof OrderEntity
     */
    pickupDate?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    totalMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    totalTaxMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    totalDiscountMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    totalTipMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    totalServiceChargeMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    appFeeMoneyAmount?: number | null;
    /**
     * 
     * @type {number}
     * @memberof OrderEntity
     */
    subtotalMoneyAmount?: number | null;
    /**
     * 
     * @type {string}
     * @memberof OrderEntity
     */
    displayId?: string | null;
}

/**
 * Check if a given object implements the OrderEntity interface.
 */
export function instanceOfOrderEntity(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function OrderEntityFromJSON(json: any): OrderEntity {
    return OrderEntityFromJSONTyped(json, false);
}

export function OrderEntityFromJSONTyped(json: any, ignoreDiscriminator: boolean): OrderEntity {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'customer': !exists(json, 'customer') ? undefined : CustomerEntityFromJSON(json['customer']),
        'location': !exists(json, 'location') ? undefined : LocationEntityFromJSON(json['location']),
        'lineItems': !exists(json, 'lineItems') ? undefined : (json['lineItems'] === null ? null : (json['lineItems'] as Array<any>).map(LineItemEntityFromJSON)),
        'squareFulfillmentStatus': !exists(json, 'squareFulfillmentStatus') ? undefined : FulfillmentStatusEnumFromJSON(json['squareFulfillmentStatus']),
        'closedDate': !exists(json, 'closedDate') ? undefined : (json['closedDate'] === null ? null : new Date(json['closedDate'])),
        'pickupDate': !exists(json, 'pickupDate') ? undefined : (json['pickupDate'] === null ? null : new Date(json['pickupDate'])),
        'totalMoneyAmount': !exists(json, 'totalMoneyAmount') ? undefined : json['totalMoneyAmount'],
        'totalTaxMoneyAmount': !exists(json, 'totalTaxMoneyAmount') ? undefined : json['totalTaxMoneyAmount'],
        'totalDiscountMoneyAmount': !exists(json, 'totalDiscountMoneyAmount') ? undefined : json['totalDiscountMoneyAmount'],
        'totalTipMoneyAmount': !exists(json, 'totalTipMoneyAmount') ? undefined : json['totalTipMoneyAmount'],
        'totalServiceChargeMoneyAmount': !exists(json, 'totalServiceChargeMoneyAmount') ? undefined : json['totalServiceChargeMoneyAmount'],
        'appFeeMoneyAmount': !exists(json, 'appFeeMoneyAmount') ? undefined : json['appFeeMoneyAmount'],
        'subtotalMoneyAmount': !exists(json, 'subtotalMoneyAmount') ? undefined : json['subtotalMoneyAmount'],
        'displayId': !exists(json, 'displayId') ? undefined : json['displayId'],
    };
}

export function OrderEntityToJSON(value?: OrderEntity | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'customer': CustomerEntityToJSON(value.customer),
        'location': LocationEntityToJSON(value.location),
        'lineItems': value.lineItems === undefined ? undefined : (value.lineItems === null ? null : (value.lineItems as Array<any>).map(LineItemEntityToJSON)),
        'squareFulfillmentStatus': FulfillmentStatusEnumToJSON(value.squareFulfillmentStatus),
        'closedDate': value.closedDate === undefined ? undefined : (value.closedDate === null ? null : value.closedDate.toISOString()),
        'pickupDate': value.pickupDate === undefined ? undefined : (value.pickupDate === null ? null : value.pickupDate.toISOString()),
        'totalMoneyAmount': value.totalMoneyAmount,
        'totalTaxMoneyAmount': value.totalTaxMoneyAmount,
        'totalDiscountMoneyAmount': value.totalDiscountMoneyAmount,
        'totalTipMoneyAmount': value.totalTipMoneyAmount,
        'totalServiceChargeMoneyAmount': value.totalServiceChargeMoneyAmount,
        'appFeeMoneyAmount': value.appFeeMoneyAmount,
        'subtotalMoneyAmount': value.subtotalMoneyAmount,
        'displayId': value.displayId,
    };
}

