/* tslint:disable */
/* eslint-disable */
/**
 * MyOrderApp Square API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.4.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StatisticsOutput
 */
export interface StatisticsOutput {
    /**
     * 
     * @type {number}
     * @memberof StatisticsOutput
     */
    sum?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StatisticsOutput
     */
    average?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StatisticsOutput
     */
    minimum?: number | null;
    /**
     * 
     * @type {number}
     * @memberof StatisticsOutput
     */
    maximum?: number | null;
}

/**
 * Check if a given object implements the StatisticsOutput interface.
 */
export function instanceOfStatisticsOutput(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StatisticsOutputFromJSON(json: any): StatisticsOutput {
    return StatisticsOutputFromJSONTyped(json, false);
}

export function StatisticsOutputFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatisticsOutput {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'sum': !exists(json, 'sum') ? undefined : json['sum'],
        'average': !exists(json, 'average') ? undefined : json['average'],
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
    };
}

export function StatisticsOutputToJSON(value?: StatisticsOutput | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'sum': value.sum,
        'average': value.average,
        'minimum': value.minimum,
        'maximum': value.maximum,
    };
}

