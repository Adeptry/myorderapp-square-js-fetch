/* tslint:disable */
/* eslint-disable */
/**
 * MyOrderApp Square API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 2.5.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { SquareCard } from './SquareCard';
import {
    SquareCardFromJSON,
    SquareCardFromJSONTyped,
    SquareCardToJSON,
} from './SquareCard';
import type { SquareError } from './SquareError';
import {
    SquareErrorFromJSON,
    SquareErrorFromJSONTyped,
    SquareErrorToJSON,
} from './SquareError';

/**
 * 
 * @export
 * @interface SquareDisableCardResponse
 */
export interface SquareDisableCardResponse {
    /**
     * 
     * @type {Array<SquareError>}
     * @memberof SquareDisableCardResponse
     */
    errors?: Array<SquareError> | null;
    /**
     * 
     * @type {SquareCard}
     * @memberof SquareDisableCardResponse
     */
    card?: SquareCard | null;
}

/**
 * Check if a given object implements the SquareDisableCardResponse interface.
 */
export function instanceOfSquareDisableCardResponse(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SquareDisableCardResponseFromJSON(json: any): SquareDisableCardResponse {
    return SquareDisableCardResponseFromJSONTyped(json, false);
}

export function SquareDisableCardResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): SquareDisableCardResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'errors': !exists(json, 'errors') ? undefined : (json['errors'] === null ? null : (json['errors'] as Array<any>).map(SquareErrorFromJSON)),
        'card': !exists(json, 'card') ? undefined : SquareCardFromJSON(json['card']),
    };
}

export function SquareDisableCardResponseToJSON(value?: SquareDisableCardResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'errors': value.errors === undefined ? undefined : (value.errors === null ? null : (value.errors as Array<any>).map(SquareErrorToJSON)),
        'card': SquareCardToJSON(value.card),
    };
}

